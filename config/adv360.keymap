#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO



        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
        move_window_right: move_window_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT) &kp ESCAPE>;
            label = "MOVE_WINDOW_RIGHT";
        };

        move_window_left: move_window_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT) &kp ESCAPE>;
            label = "MOVE_WINDOW_LEFT";
        };

        move_window_down: move_window_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(DOWN) &kp ESCAPE>;
            label = "MOVE_WINDOW_DOWN";
        };

        move_window_up: move_window_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(UP_ARROW) &kp ESCAPE>;
            label = "MOVE_WINDOW_UP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp CAPSLOCK      &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp LC(LG(T))                                                                 &mo 3              &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB           &kp Q   &kp W   &kp E   &kp R   &kp T   &kp LS(LC(SPACE))                                                             &none              &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp ESC           &kp A   &kp S   &kp D   &kp F   &kp G   &kp LA(LS(A))      &kp LCTRL  &kp LALT      &kp LEFT_CONTROL  &kp ENTER       &kp LA(BACKSPACE)  &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z   &kp X   &kp C   &kp V   &kp B                                 &mo 4         &none                                                &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
&kp LEFT_CONTROL  &none   &none   &none   &none           &kp SPACE          &mo 1      &mo 2         &none             &kp LEFT_SHIFT  &kp BACKSPACE              &none   &none      &none    &none     &none
            >;
        };

        keypad {
            bindings = <
&none      &none  &none            &none  &none  &none          &trans                                                               &mo 3    &kp LESS_THAN   &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE     &none
&kp TAB    &none  &kp LC(RIGHT)    &none  &none  &kp LC(GRAVE)  &none                                                                &none    &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp LBKT              &kp RIGHT_BRACKET      &kp KP_MINUS  &kp KP_PLUS
&kp ESC    &none  &kp PRINTSCREEN  &none  &none  &none          &none      &kp LCTRL  &kp LALT      &none            &kp LS(ENTER)   &none    &kp LEFT        &kp DOWN          &kp UP_ARROW          &kp RIGHT              &kp UNDER     &kp EQUAL
&kp LSHFT  &none  &none            &none  &none  &kp LC(LEFT)                         &none         &kp EXCLAMATION                           &kp STAR        &kp HASH          &kp CARET             &kp DOLLAR             &kp TILDE     &kp BACKSLASH
&none      &none  &none            &none  &none                 &kp SPACE  &none      &none         &kp AT_SIGN      &kp LEFT_SHIFT  &kp TAB                  &kp AMPERSAND     &kp PIPE              &kp PERCENT            &none         &none
            >;
        };

        fn {
            bindings = <
&none   &none   &none   &none   &none   &none   &tog 1                                      &mo 3   &none   &none   &none    &none    &none    &none
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans   &trans   &trans   &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &trans  &trans      &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                          &trans  &trans             &trans             &trans           &trans              &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp C_BRIGHTNESS_INC                                            &trans  &trans             &trans             &trans           &trans              &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp C_BRIGHTNESS_DEC  &trans  &trans      &kp LEFT_WIN  &none   &trans  &move_window_left  &move_window_down  &move_window_up  &move_window_right  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                &trans      &trans                        &kp LG(LS(LEFT))   &trans             &trans           &kp LG(LS(RIGHT))   &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans                &trans  &trans      &trans        &trans  &trans                     &trans             &trans           &trans              &trans  &trans
            >;
        };
    };
};
